// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from aom.proto

package bosphorus;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class DATAVALUEALTERNATIVES implements Externalizable, Message<DATAVALUEALTERNATIVES>, Schema<DATAVALUEALTERNATIVES>
{

    public static Schema<DATAVALUEALTERNATIVES> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static DATAVALUEALTERNATIVES getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final DATAVALUEALTERNATIVES DEFAULT_INSTANCE = new DATAVALUEALTERNATIVES();

    
    private DVPROPORTION dvproportionfield;
    private DVTEXT dvtextfield;
    private DVTIME dvtimefield;
    private DVAMOUNT dvamountfield;
    private DVQUANTITY dvquantityfield;
    private DVDURATION dvdurationfield;
    private DVGENERALTIMESPECIFICATION dvgeneraltimespecificationfield;
    private DVSTATE dvstatefield;
    private DVBOOLEAN dvbooleanfield;
    private DVDATETIME dvdatetimefield;
    private DVURI dvurifield;
    private DVPERIODICTIMESPECIFICATION dvperiodictimespecificationfield;
    private DVEHRURI dvehrurifield;
    private DVPARSABLE dvparsablefield;
    private DVORDINAL dvordinalfield;
    private DVTEMPORAL dvtemporalfield;
    private DVCOUNT dvcountfield;
    private DVCODEDTEXT dvcodedtextfield;
    private DVINTERVAL dvintervalfield;
    private DVDATE dvdatefield;
    private DVMULTIMEDIA dvmultimediafield;
    private DVPARAGRAPH dvparagraphfield;
    private DVIDENTIFIER dvidentifierfield;

    public DATAVALUEALTERNATIVES()
    {
        
    }

    // getters and setters

    // dvproportionfield

    public DVPROPORTION getDvproportionfield()
    {
        return dvproportionfield;
    }

    public void setDvproportionfield(DVPROPORTION dvproportionfield)
    {
        this.dvproportionfield = dvproportionfield;
    }

    // dvtextfield

    public DVTEXT getDvtextfield()
    {
        return dvtextfield;
    }

    public void setDvtextfield(DVTEXT dvtextfield)
    {
        this.dvtextfield = dvtextfield;
    }

    // dvtimefield

    public DVTIME getDvtimefield()
    {
        return dvtimefield;
    }

    public void setDvtimefield(DVTIME dvtimefield)
    {
        this.dvtimefield = dvtimefield;
    }

    // dvamountfield

    public DVAMOUNT getDvamountfield()
    {
        return dvamountfield;
    }

    public void setDvamountfield(DVAMOUNT dvamountfield)
    {
        this.dvamountfield = dvamountfield;
    }

    // dvquantityfield

    public DVQUANTITY getDvquantityfield()
    {
        return dvquantityfield;
    }

    public void setDvquantityfield(DVQUANTITY dvquantityfield)
    {
        this.dvquantityfield = dvquantityfield;
    }

    // dvdurationfield

    public DVDURATION getDvdurationfield()
    {
        return dvdurationfield;
    }

    public void setDvdurationfield(DVDURATION dvdurationfield)
    {
        this.dvdurationfield = dvdurationfield;
    }

    // dvgeneraltimespecificationfield

    public DVGENERALTIMESPECIFICATION getDvgeneraltimespecificationfield()
    {
        return dvgeneraltimespecificationfield;
    }

    public void setDvgeneraltimespecificationfield(DVGENERALTIMESPECIFICATION dvgeneraltimespecificationfield)
    {
        this.dvgeneraltimespecificationfield = dvgeneraltimespecificationfield;
    }

    // dvstatefield

    public DVSTATE getDvstatefield()
    {
        return dvstatefield;
    }

    public void setDvstatefield(DVSTATE dvstatefield)
    {
        this.dvstatefield = dvstatefield;
    }

    // dvbooleanfield

    public DVBOOLEAN getDvbooleanfield()
    {
        return dvbooleanfield;
    }

    public void setDvbooleanfield(DVBOOLEAN dvbooleanfield)
    {
        this.dvbooleanfield = dvbooleanfield;
    }

    // dvdatetimefield

    public DVDATETIME getDvdatetimefield()
    {
        return dvdatetimefield;
    }

    public void setDvdatetimefield(DVDATETIME dvdatetimefield)
    {
        this.dvdatetimefield = dvdatetimefield;
    }

    // dvurifield

    public DVURI getDvurifield()
    {
        return dvurifield;
    }

    public void setDvurifield(DVURI dvurifield)
    {
        this.dvurifield = dvurifield;
    }

    // dvperiodictimespecificationfield

    public DVPERIODICTIMESPECIFICATION getDvperiodictimespecificationfield()
    {
        return dvperiodictimespecificationfield;
    }

    public void setDvperiodictimespecificationfield(DVPERIODICTIMESPECIFICATION dvperiodictimespecificationfield)
    {
        this.dvperiodictimespecificationfield = dvperiodictimespecificationfield;
    }

    // dvehrurifield

    public DVEHRURI getDvehrurifield()
    {
        return dvehrurifield;
    }

    public void setDvehrurifield(DVEHRURI dvehrurifield)
    {
        this.dvehrurifield = dvehrurifield;
    }

    // dvparsablefield

    public DVPARSABLE getDvparsablefield()
    {
        return dvparsablefield;
    }

    public void setDvparsablefield(DVPARSABLE dvparsablefield)
    {
        this.dvparsablefield = dvparsablefield;
    }

    // dvordinalfield

    public DVORDINAL getDvordinalfield()
    {
        return dvordinalfield;
    }

    public void setDvordinalfield(DVORDINAL dvordinalfield)
    {
        this.dvordinalfield = dvordinalfield;
    }

    // dvtemporalfield

    public DVTEMPORAL getDvtemporalfield()
    {
        return dvtemporalfield;
    }

    public void setDvtemporalfield(DVTEMPORAL dvtemporalfield)
    {
        this.dvtemporalfield = dvtemporalfield;
    }

    // dvcountfield

    public DVCOUNT getDvcountfield()
    {
        return dvcountfield;
    }

    public void setDvcountfield(DVCOUNT dvcountfield)
    {
        this.dvcountfield = dvcountfield;
    }

    // dvcodedtextfield

    public DVCODEDTEXT getDvcodedtextfield()
    {
        return dvcodedtextfield;
    }

    public void setDvcodedtextfield(DVCODEDTEXT dvcodedtextfield)
    {
        this.dvcodedtextfield = dvcodedtextfield;
    }

    // dvintervalfield

    public DVINTERVAL getDvintervalfield()
    {
        return dvintervalfield;
    }

    public void setDvintervalfield(DVINTERVAL dvintervalfield)
    {
        this.dvintervalfield = dvintervalfield;
    }

    // dvdatefield

    public DVDATE getDvdatefield()
    {
        return dvdatefield;
    }

    public void setDvdatefield(DVDATE dvdatefield)
    {
        this.dvdatefield = dvdatefield;
    }

    // dvmultimediafield

    public DVMULTIMEDIA getDvmultimediafield()
    {
        return dvmultimediafield;
    }

    public void setDvmultimediafield(DVMULTIMEDIA dvmultimediafield)
    {
        this.dvmultimediafield = dvmultimediafield;
    }

    // dvparagraphfield

    public DVPARAGRAPH getDvparagraphfield()
    {
        return dvparagraphfield;
    }

    public void setDvparagraphfield(DVPARAGRAPH dvparagraphfield)
    {
        this.dvparagraphfield = dvparagraphfield;
    }

    // dvidentifierfield

    public DVIDENTIFIER getDvidentifierfield()
    {
        return dvidentifierfield;
    }

    public void setDvidentifierfield(DVIDENTIFIER dvidentifierfield)
    {
        this.dvidentifierfield = dvidentifierfield;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<DATAVALUEALTERNATIVES> cachedSchema()
    {
        return this;
    }

    // schema methods

    public DATAVALUEALTERNATIVES newMessage()
    {
        return new DATAVALUEALTERNATIVES();
    }

    public Class<DATAVALUEALTERNATIVES> typeClass()
    {
        return DATAVALUEALTERNATIVES.class;
    }

    public String messageName()
    {
        return DATAVALUEALTERNATIVES.class.getSimpleName();
    }

    public String messageFullName()
    {
        return DATAVALUEALTERNATIVES.class.getName();
    }

    public boolean isInitialized(DATAVALUEALTERNATIVES message)
    {
        return true;
    }

    public void mergeFrom(Input input, DATAVALUEALTERNATIVES message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    message.dvproportionfield = input.mergeObject(message.dvproportionfield, DVPROPORTION.getSchema());
                    break;

                case 2:
                    message.dvtextfield = input.mergeObject(message.dvtextfield, DVTEXT.getSchema());
                    break;

                case 3:
                    message.dvtimefield = input.mergeObject(message.dvtimefield, DVTIME.getSchema());
                    break;

                case 4:
                    message.dvamountfield = input.mergeObject(message.dvamountfield, DVAMOUNT.getSchema());
                    break;

                case 5:
                    message.dvquantityfield = input.mergeObject(message.dvquantityfield, DVQUANTITY.getSchema());
                    break;

                case 6:
                    message.dvdurationfield = input.mergeObject(message.dvdurationfield, DVDURATION.getSchema());
                    break;

                case 7:
                    message.dvgeneraltimespecificationfield = input.mergeObject(message.dvgeneraltimespecificationfield, DVGENERALTIMESPECIFICATION.getSchema());
                    break;

                case 8:
                    message.dvstatefield = input.mergeObject(message.dvstatefield, DVSTATE.getSchema());
                    break;

                case 9:
                    message.dvbooleanfield = input.mergeObject(message.dvbooleanfield, DVBOOLEAN.getSchema());
                    break;

                case 10:
                    message.dvdatetimefield = input.mergeObject(message.dvdatetimefield, DVDATETIME.getSchema());
                    break;

                case 11:
                    message.dvurifield = input.mergeObject(message.dvurifield, DVURI.getSchema());
                    break;

                case 12:
                    message.dvperiodictimespecificationfield = input.mergeObject(message.dvperiodictimespecificationfield, DVPERIODICTIMESPECIFICATION.getSchema());
                    break;

                case 13:
                    message.dvehrurifield = input.mergeObject(message.dvehrurifield, DVEHRURI.getSchema());
                    break;

                case 14:
                    message.dvparsablefield = input.mergeObject(message.dvparsablefield, DVPARSABLE.getSchema());
                    break;

                case 15:
                    message.dvordinalfield = input.mergeObject(message.dvordinalfield, DVORDINAL.getSchema());
                    break;

                case 16:
                    message.dvtemporalfield = input.mergeObject(message.dvtemporalfield, DVTEMPORAL.getSchema());
                    break;

                case 17:
                    message.dvcountfield = input.mergeObject(message.dvcountfield, DVCOUNT.getSchema());
                    break;

                case 18:
                    message.dvcodedtextfield = input.mergeObject(message.dvcodedtextfield, DVCODEDTEXT.getSchema());
                    break;

                case 19:
                    message.dvintervalfield = input.mergeObject(message.dvintervalfield, DVINTERVAL.getSchema());
                    break;

                case 20:
                    message.dvdatefield = input.mergeObject(message.dvdatefield, DVDATE.getSchema());
                    break;

                case 21:
                    message.dvmultimediafield = input.mergeObject(message.dvmultimediafield, DVMULTIMEDIA.getSchema());
                    break;

                case 22:
                    message.dvparagraphfield = input.mergeObject(message.dvparagraphfield, DVPARAGRAPH.getSchema());
                    break;

                case 23:
                    message.dvidentifierfield = input.mergeObject(message.dvidentifierfield, DVIDENTIFIER.getSchema());
                    break;

                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, DATAVALUEALTERNATIVES message) throws IOException
    {
        if(message.dvproportionfield != null)
             output.writeObject(1, message.dvproportionfield, DVPROPORTION.getSchema(), false);


        if(message.dvtextfield != null)
             output.writeObject(2, message.dvtextfield, DVTEXT.getSchema(), false);


        if(message.dvtimefield != null)
             output.writeObject(3, message.dvtimefield, DVTIME.getSchema(), false);


        if(message.dvamountfield != null)
             output.writeObject(4, message.dvamountfield, DVAMOUNT.getSchema(), false);


        if(message.dvquantityfield != null)
             output.writeObject(5, message.dvquantityfield, DVQUANTITY.getSchema(), false);


        if(message.dvdurationfield != null)
             output.writeObject(6, message.dvdurationfield, DVDURATION.getSchema(), false);


        if(message.dvgeneraltimespecificationfield != null)
             output.writeObject(7, message.dvgeneraltimespecificationfield, DVGENERALTIMESPECIFICATION.getSchema(), false);


        if(message.dvstatefield != null)
             output.writeObject(8, message.dvstatefield, DVSTATE.getSchema(), false);


        if(message.dvbooleanfield != null)
             output.writeObject(9, message.dvbooleanfield, DVBOOLEAN.getSchema(), false);


        if(message.dvdatetimefield != null)
             output.writeObject(10, message.dvdatetimefield, DVDATETIME.getSchema(), false);


        if(message.dvurifield != null)
             output.writeObject(11, message.dvurifield, DVURI.getSchema(), false);


        if(message.dvperiodictimespecificationfield != null)
             output.writeObject(12, message.dvperiodictimespecificationfield, DVPERIODICTIMESPECIFICATION.getSchema(), false);


        if(message.dvehrurifield != null)
             output.writeObject(13, message.dvehrurifield, DVEHRURI.getSchema(), false);


        if(message.dvparsablefield != null)
             output.writeObject(14, message.dvparsablefield, DVPARSABLE.getSchema(), false);


        if(message.dvordinalfield != null)
             output.writeObject(15, message.dvordinalfield, DVORDINAL.getSchema(), false);


        if(message.dvtemporalfield != null)
             output.writeObject(16, message.dvtemporalfield, DVTEMPORAL.getSchema(), false);


        if(message.dvcountfield != null)
             output.writeObject(17, message.dvcountfield, DVCOUNT.getSchema(), false);


        if(message.dvcodedtextfield != null)
             output.writeObject(18, message.dvcodedtextfield, DVCODEDTEXT.getSchema(), false);


        if(message.dvintervalfield != null)
             output.writeObject(19, message.dvintervalfield, DVINTERVAL.getSchema(), false);


        if(message.dvdatefield != null)
             output.writeObject(20, message.dvdatefield, DVDATE.getSchema(), false);


        if(message.dvmultimediafield != null)
             output.writeObject(21, message.dvmultimediafield, DVMULTIMEDIA.getSchema(), false);


        if(message.dvparagraphfield != null)
             output.writeObject(22, message.dvparagraphfield, DVPARAGRAPH.getSchema(), false);


        if(message.dvidentifierfield != null)
             output.writeObject(23, message.dvidentifierfield, DVIDENTIFIER.getSchema(), false);

    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
