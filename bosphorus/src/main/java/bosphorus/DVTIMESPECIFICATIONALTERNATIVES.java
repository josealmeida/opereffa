// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from aom.proto

package bosphorus;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class DVTIMESPECIFICATIONALTERNATIVES implements Externalizable, Message<DVTIMESPECIFICATIONALTERNATIVES>, Schema<DVTIMESPECIFICATIONALTERNATIVES>
{

    public static Schema<DVTIMESPECIFICATIONALTERNATIVES> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static DVTIMESPECIFICATIONALTERNATIVES getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final DVTIMESPECIFICATIONALTERNATIVES DEFAULT_INSTANCE = new DVTIMESPECIFICATIONALTERNATIVES();

    
    private DVPERIODICTIMESPECIFICATION dvperiodictimespecificationfield;
    private DVGENERALTIMESPECIFICATION dvgeneraltimespecificationfield;

    public DVTIMESPECIFICATIONALTERNATIVES()
    {
        
    }

    // getters and setters

    // dvperiodictimespecificationfield

    public DVPERIODICTIMESPECIFICATION getDvperiodictimespecificationfield()
    {
        return dvperiodictimespecificationfield;
    }

    public void setDvperiodictimespecificationfield(DVPERIODICTIMESPECIFICATION dvperiodictimespecificationfield)
    {
        this.dvperiodictimespecificationfield = dvperiodictimespecificationfield;
    }

    // dvgeneraltimespecificationfield

    public DVGENERALTIMESPECIFICATION getDvgeneraltimespecificationfield()
    {
        return dvgeneraltimespecificationfield;
    }

    public void setDvgeneraltimespecificationfield(DVGENERALTIMESPECIFICATION dvgeneraltimespecificationfield)
    {
        this.dvgeneraltimespecificationfield = dvgeneraltimespecificationfield;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<DVTIMESPECIFICATIONALTERNATIVES> cachedSchema()
    {
        return this;
    }

    // schema methods

    public DVTIMESPECIFICATIONALTERNATIVES newMessage()
    {
        return new DVTIMESPECIFICATIONALTERNATIVES();
    }

    public Class<DVTIMESPECIFICATIONALTERNATIVES> typeClass()
    {
        return DVTIMESPECIFICATIONALTERNATIVES.class;
    }

    public String messageName()
    {
        return DVTIMESPECIFICATIONALTERNATIVES.class.getSimpleName();
    }

    public String messageFullName()
    {
        return DVTIMESPECIFICATIONALTERNATIVES.class.getName();
    }

    public boolean isInitialized(DVTIMESPECIFICATIONALTERNATIVES message)
    {
        return true;
    }

    public void mergeFrom(Input input, DVTIMESPECIFICATIONALTERNATIVES message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    message.dvperiodictimespecificationfield = input.mergeObject(message.dvperiodictimespecificationfield, DVPERIODICTIMESPECIFICATION.getSchema());
                    break;

                case 2:
                    message.dvgeneraltimespecificationfield = input.mergeObject(message.dvgeneraltimespecificationfield, DVGENERALTIMESPECIFICATION.getSchema());
                    break;

                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, DVTIMESPECIFICATIONALTERNATIVES message) throws IOException
    {
        if(message.dvperiodictimespecificationfield != null)
             output.writeObject(1, message.dvperiodictimespecificationfield, DVPERIODICTIMESPECIFICATION.getSchema(), false);


        if(message.dvgeneraltimespecificationfield != null)
             output.writeObject(2, message.dvgeneraltimespecificationfield, DVGENERALTIMESPECIFICATION.getSchema(), false);

    }

    public String getFieldName(int number)
    {
        return Integer.toString(number);
    }

    public int getFieldNumber(String name)
    {
        return Integer.parseInt(name);
    }
    
}
